name: Main Flow

on:
  push:
    branches:
      - main

env:
  SERVICE_NAME: ruta-optima
  REGION: us-central1
  PROJECT_ID: pruebadesarrollosenior
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and deploy
    outputs:
      url: ${{ steps.extract_url.outputs.url }}
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install and Build
        uses: ./.github/actions/build

      - name: Create ENV File
        run: echo "${{ secrets.ENV_PROD }}" > .env

      - name: Log env
        run: cat .env

      - name: Google Cloud authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.CM_GCP_KEY }}
          project_id: ${{ secrets.PROJECT_ID_PROD }}

      - name: Set Google SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.PROJECT_ID_PROD }}

      - name: Build and deploy image
        env:
          GCP_PROJECT: ${{ secrets.PROJECT_ID_PROD }}
        run: |
          PROJECT_ID=$GCP_PROJECT
          COMMIT_SHA=${{ github.sha }}
          SERVICE_NAME=$SERVICE_NAME
          make deploy

      - name: Deploy to Cloud Run
        env:
          GCP_PROJECT: ${{ secrets.PROJECT_ID_PROD }}
        run: |-
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$GCP_PROJECT/$SERVICE_NAME:${{ github.sha }} \
            --allow-unauthenticated \
            --region $REGION \
            --max-instances 2

      - name: Get URL Cloud Run
        env:
          GCP_PROJECT: ${{ secrets.PROJECT_ID_PROD }}
        shell: bash
        run: echo "##[set-output name=url;]$(gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)')"
        id: extract_url

      - name: Verificar contenido del .env
        run: cat .env
